import cv2
import numpy as np
import matplotlib.pyplot as plt

# Load the image (replace 'image_path.jpg' with your actual image file)
image = cv2.imread('/content/bitss.jpg')

# Check if the image was loaded successfully
if image is None:
    print("Error: Could not load image. Please check the file path.")
    exit()

# Preprocess the image
gray = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)  # Convert to grayscale
blurred = cv2.GaussianBlur(gray, (5, 5), 0)     # Apply Gaussian blur

# Thresholding
_, binary = cv2.threshold(blurred, 127, 255, cv2.THRESH_BINARY)  # Create binary image

# Contour detection
contours, _ = cv2.findContours(binary, cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_SIMPLE)  # Find contours

# Count objects
object_count = len(contours)
print(f'Number of objects detected: {object_count}')

# Draw contours on the original image
output_image = image.copy()
cv2.drawContours(output_image, contours, -1, (0, 255, 0), 2)  # Draw contours in green

# Display the original and output images for comparison
plt.figure(figsize=(10, 5))

plt.subplot(1, 2, 1)
plt.imshow(cv2.cvtColor(image, cv2.COLOR_BGR2RGB))
plt.axis('off')
plt.title('Original Image')

plt.subplot(1, 2, 2)
plt.imshow(cv2.cvtColor(output_image, cv2.COLOR_BGR2RGB))
plt.axis('off')
plt.title('Detected Objects')

plt.show()  # Show the plot
